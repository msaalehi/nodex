name: publish
description: ""
inputs:
  checkout:
    required: false
    description: ""
  github-token:
    required: true
    description: ""
runs:
  using: composite
  steps:
    - name: (checkout) source code
      if: ${{ inputs.checkout == 'true' }}
      uses: actions/checkout@v3

    - name: (run) download artifacts (mac)
      uses: actions/download-artifact@v3
      with:
        name: macos-latest
        path: ~/macos-latest

    - name: (run) download artifacts (linux)
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest
        path: ~/ubuntu-latest

    - name: (run) commit analyzer
      id: commit_analyzer
      uses: ./.github/actions/commit-analyzer

    - name: (publish) release drafter
      id: release_drafter
      uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        version: "v${{ steps.commit_analyzer.outputs.version }}"
        publish: false

    - name: (publish) upload asset (linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        upload_url: ${{ steps.release_drafter.outputs.upload_url }}
        asset_path: /home/runner/ubuntu-latest/nodex-agent-ubuntu-latest.zip
        asset_name: nodex-agent-x86_64.zip
        asset_content_type: application/zip

    - name: (publish) upload asset (mac)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        upload_url: ${{ steps.release_drafter.outputs.upload_url }}
        asset_path: /home/runner/macos-latest/nodex-agent-macos-latest.zip
        asset_name: nodex-agent-mac.zip
        asset_content_type: application/zip

    - shell: bash
      working-directory: examples/nodejs
      run: |
        mv app/README.md .
        zip -r example.zip app/ README.md package.json tsconfig.json yarn.lock ../../LICENSE

    - name: (publish) upload asset (example)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        upload_url: ${{ steps.release_drafter.outputs.upload_url }}
        asset_path: ./examples/nodejs/example.zip
        asset_name: example.zip
        asset_content_type: application/zip
